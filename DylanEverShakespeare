'''
FLOWER BOX
Name: Dylan Ever
Description: This code takes a txt file for a play, cleans up puncuation and graphs the number of times 15 words to tell the story.
Date: 3/31/2024
Bonus: Used Plotly to graph
Bugs: All 15 words have the same value and graphing with variables was not working so just did it manually
Credits: Zach helped with setting up functions
'''

from pathlib import Path
import plotly.graph_objects as go

def main():
   #this is the main function which reads in the files, opens them both up and runs their respective functions
    
    """ doc """
    current_dir = Path(__file__).parent
    print(current_dir)
    file_path1 = current_dir / "Romeo-And-Juliet.txt"
    file_path2 = current_dir / "A-Midsummer-Nights-Dream.txt"


    file_input1 = open(file_path1, 'r')
    readromeo(file_input1)
    file_input2 = open(file_path2, 'r')     
    readmidsummer(file_input2)

    answer = "Y"
    go = True

def readromeo(file_input1):
    #Checks for number of times specific 15 words are said and then graphs it
    #file_in - reads in the txt document of information
    #return void

    romeo_dict = {}
    clean_script = cleanse(file_input1)
    essential = ['love', 'death', 'lies', 'young', 'friends', 'night', 'sleep', 'farwell', 'poison', 'marrige', 'kiss', 'fate', 'fued', 'verona', 'tragedy']
    for word in clean_script:
        word = word.lower()
        if word in essential:
            if word not in romeo_dict:
                romeo_dict[word] = 1
            else:
                romeo_dict[word] +=1

    labels = list(romeo_dict.keys())
    values = list(romeo_dict.values())

    # Create a pie chart
    fig = go.Figure(data=[go.Pie(labels=labels, values=values)])

    # Set the chart title
    fig.update_layout(title='Romeo and Juliet Words')

    # Show the chart
    fig.show()
  
def readmidsummer(file_input2):
    #Checks for number of times specific 15 words are said and then graphs it
    #file_in - reads in the txt document of information
    #return void

    midsummer_dict = {}
    clean_script = cleanse(file_input2)
    essential = ['magic', 'forest', 'faries', 'love', 'athens', 'dream', 'comody', 'marrige', 'mischeif', 'potion', 'quarrel', 'moonlight', 'sleep', 'play', 'transformation']
    for word in clean_script:
        word = word.lower()
        if word in essential:
            if word not in midsummer_dict:
                midsummer_dict[word] = 1
            else:
                midsummer_dict[word] +=1

    labels = list(midsummer_dict.keys())
    values = list(midsummer_dict.values())

    # Create a pie chart
    fig = go.Figure(data=[go.Pie(labels=labels, values=values)])

    # Set the chart title
    fig.update_layout(title='A Midsummer Nights Dream Words')

    # Show the chart
    fig.show()

def cleanse(unclean):
    #Checks for number of times specific 15 words are said and then graphs it
    #file_in - reads in the txt document of information
    #return a cleaned up list withou punctiation or repetitive words
    unclean.seek(1)
    not_descriptive = ['the', 'a', 'and', 'of', 'i', 'of', 'or', '\\n']
    new_list = []
    for line in unclean:
        clean = line.split()
        for word in clean:
            word = word.lower()
            word = word.replace(",", "")
            word = word.replace(".", "")
            word = word.replace("?", "")
            word = word.replace("!", "")
            word = word.replace("(", "")
            word = word.replace(")", "")
            if word not in not_descriptive:
                new_list.append(word)
    return new_list
main()
